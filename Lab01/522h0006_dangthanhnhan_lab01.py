# -*- coding: utf-8 -*-
"""522H0006_DangThanhNhan_Lab01

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Kivw09iR1SP7AT2VNdQhhd4ux5tzqHcv

**Đặng Thành Nhân-MSSV:522H0006 - Lab01**
"""

#Ex01
import itertools
E = [ 1, 2, 3, 4]
k = 3
P = [p for p in itertools.product(E, repeat=k)]
print(P)
print("There are", len(P), "codes.")

#Ex02
import itertools
E = {'a', 'b', 'c', 'd'}
k = 3
n = len(E)
#Print all the k-permutations of E
permute_k = list(itertools.permutations(E, k))
print("%i-permutations of %s: " %(k,E))
for i in permute_k:
  print(i)
print("Size = ", "%i/(%i-%i) = " %(n,n,k), len(permute_k))

#Ex03
import itertools
E = {'a', 'b', 'c', 'd'}
k = 3
# Print all the k-combination of E
choose_k = list(itertools.combinations(E,k))
print("%i-combinations of %s: " %(k,E))
for i in choose_k:
  print(i)
print("Number of combinations = %i!/(%i!(%i-%i)!) = %i" %(n,k,n,k,len(choose_k)))

#Ex04
def cross(A, B):
    '''The set of ways of concatenating one item from collection A with one from B.'''
    return {a + b for a in A for b in B}

urn = cross('W', '12345678') | cross('B', '123456') | cross (
    'R', '123456789')
print(urn)

import itertools
U6 = list(itertools.combinations(urn, 6))
#Solution for (a):
print(len(U6))
#Solution for (b):
for s in U6:
  print(s)
#Solution for (c):
for s in U6:
  if s[0] [0] == 'R' and s[-1] [0] == 'R':
    print(s)

#Exercise 01
import itertools
E = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
k = 4
num_code = list(itertools.permutations(E, k))
code_length = len(num_code)
print(num_code)
print("The number of the numbers to variable = ", code_length)

#Exercise 02
import itertools
A = {1, 2, 3, 4, 5}
k = 3
num_3_digit = list(itertools.permutations(A, k))
num_length = len(num_3_digit)
print(num_3_digit)
print("The number of the numbers to variable num_3_digit = ", num_length )

#Exercise 03
def cross(A, B):
    return {a + b for a in A for b in B}
urn = cross('W', '12345678') | cross('B', '123456') | cross ('R', '123456789')

#a
U3 = list(itertools.combinations(urn, 3))
print("List of all possible 3 balls: ")
print(U3)
print(len(U3))

#b
dif_col = []
for i in U3:
  if ((i[0][0] != i[1][0]) and (i[0][0] != i[2][0]) and (i[1][0] != i[2][0])):
    dif_col.append(i)
for a in dif_col:
  print(a)

#c
W_0_R = []
for i in U3:
  if (i[0][0] == 'W') and (i[1][0] == 'R'):
    W_0_R.append(i)
for i in W_0_R:
  print(i)

#Exercise 04
import itertools
def cross(A, B):
    return {a + b for a in A for b in B}
urn = cross('M', '1234') | cross('P', '123') | cross ('C', '12') | cross ('L', '1')
sort_book = list(itertools.permutations(urn,10))
for()

"""# New Section"""